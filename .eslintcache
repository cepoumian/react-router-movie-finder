[{"/Users/cepoumian/Development Projects/React_Apps/react-router-movie-finder/src/index.js":"1","/Users/cepoumian/Development Projects/React_Apps/react-router-movie-finder/src/App.js":"2","/Users/cepoumian/Development Projects/React_Apps/react-router-movie-finder/src/reportWebVitals.js":"3","/Users/cepoumian/Development Projects/React_Apps/react-router-movie-finder/src/Home.js":"4","/Users/cepoumian/Development Projects/React_Apps/react-router-movie-finder/src/utils.js":"5","/Users/cepoumian/Development Projects/React_Apps/react-router-movie-finder/src/Movie.js":"6"},{"size":542,"mtime":1609217664000,"results":"7","hashOfConfig":"8"},{"size":655,"mtime":1609379581000,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1609216911000,"results":"10","hashOfConfig":"8"},{"size":2657,"mtime":1609380125000,"results":"11","hashOfConfig":"8"},{"size":215,"mtime":1609280827000,"results":"12","hashOfConfig":"8"},{"size":1657,"mtime":1609381786000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"2z0pfa",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/Users/cepoumian/Development Projects/React_Apps/react-router-movie-finder/src/index.js",[],["29","30"],"/Users/cepoumian/Development Projects/React_Apps/react-router-movie-finder/src/App.js",[],"/Users/cepoumian/Development Projects/React_Apps/react-router-movie-finder/src/reportWebVitals.js",[],"/Users/cepoumian/Development Projects/React_Apps/react-router-movie-finder/src/Home.js",["31"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { json, checkStatus } from './utils';\n\nconst Movie = (props) => {\n  const { \n    Title,\n    Year,\n    imdbID,\n    Type,\n    Poster\n  } = props.movie;\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-4 col-md-2 col-lg-1 mb-3\">\n        <Link to={`/movie/${imdbID}/`}>\n          <img src={Poster} className=\"img-fluid\" />\n        </Link>\n      </div>\n      <div className=\"col-8 col-md-10 col-lg-11 mb-3\">\n        <Link to={`/movie/${imdbID}/`}>\n          <h4>{Title}</h4>\n          <p>{Type} | {Year}</p>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nclass MovieFinder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: '',\n      results: [],\n      error: ''\n    };    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);  \n  }\n\n  handleChange(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let { searchTerm } = this.state;\n    searchTerm = searchTerm.trim();\n    if (!searchTerm) {\n      return;\n    }\n\n    fetch(`https://www.omdbapi.com/?s=${searchTerm}&apikey=f0368a61`)\n    .then(checkStatus)\n    .then(json)\n    .then((data) => {\n      if (data.Response === 'False') {\n        throw new Error(data.Error);\n      }\n      if (data.Response === 'True' && data.Search) {\n        this.setState({ results: data.Search, error: '' });\n      }\n    })\n    .catch((error) => {\n      this.setState({ error: error.message });\n      console.log(error);\n    })\n\n  } // end of handleSubmit method\n\n  render() {\n    const { searchTerm, results, error } = this.state;\n    \n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <form onSubmit={this.handleSubmit} className=\"form-inline my-4\">\n              <input\n                type=\"text\"\n                className=\"form-control mr-sm-2\"\n                placeholder=\"Blade Runner\"\n                value={searchTerm}\n                onChange={this.handleChange}\n              />\n              <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            </form>\n            {(() => {\n              if (error) {\n                return error;\n              }\n              return results.map((movie) => {\n                return <Movie key={movie.imdbID} movie={movie} />;\n              });\n            })()}\n          </div>\n        </div>\n      </div>\n    );\n    \n  } // end of render method\n\n} // end of MovieFinder componenent\n\nexport default MovieFinder;","/Users/cepoumian/Development Projects/React_Apps/react-router-movie-finder/src/utils.js",[],"/Users/cepoumian/Development Projects/React_Apps/react-router-movie-finder/src/Movie.js",["32"],"import React from 'react';\nimport { json, checkStatus } from './utils';\n\nclass Movie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(`https://www.omdbapi.com/?i=${this.props.match.params.id}&apikey=f0368a61`)\n    .then(checkStatus)\n    .then(json)\n    .then((data) => {\n      if (data.Response === 'False') {\n        throw new Error(data.Error);\n      }\n\n      if (data.Response === 'True') {\n        console.log(data);\n        this.setState({ movie: data, error: '' });\n      }\n    })\n    .catch((error) => {\n      this.setState({ error: error.message });\n      console.log(error);\n    })\n  }\n\n  render() {\n    if (!this.state.movie) {\n      return null;\n    }\n\n    const {\n      Title,\n      Year,\n      Plot,\n      Director,\n      imdbRating,\n      Poster\n    } = this.state.movie;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row pt-5\">\n          <div className=\"col-6\">\n            <h1>{Title}</h1>\n            <ul className=\"list-unstyled\">\n              <li>\n                <p>Year: {Year}</p>\n              </li>\n              <li>\n                <p>Director: {Director}</p>\n              </li>\n              <li>\n                <p>Plot: {Plot}</p>\n              </li>\n              <li>\n                <p>imdbRating: {imdbRating} / 10</p>\n              </li>                                          \n            </ul>\n          </div>\n          <div className=\"col-6\">\n            <img src={Poster} className=\"img-fluid\" />\n          </div>          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movie;",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":18,"column":11,"nodeType":"39","endLine":18,"endColumn":53},{"ruleId":"37","severity":1,"message":"38","line":67,"column":13,"nodeType":"39","endLine":67,"endColumn":55},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]